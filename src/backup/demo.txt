import React, { useState } from 'react';
import axios from 'axios';

const RecipeSearch = () => {
  const [searchTerm, setSearchTerm] = useState('');
  const [recipes, setRecipes] = useState([]);

  const handleSearchChange = (event) => {
    setSearchTerm(event.target.value);
  };

  const handleSearchSubmit = async (event) => {
    event.preventDefault();
    try {
      const response = await axios.get(`https://api.spoonacular.com/recipes/complexSearch?apiKey=YOUR_API_KEY&query=${searchTerm}`);
      setRecipes(response.data.results);
    } catch (error) {
      console.log(error);
    }
  };

  return (
    <div>
      <form onSubmit={handleSearchSubmit}>
        <input type="text" placeholder="Search for recipes..." value={searchTerm} onChange={handleSearchChange} />
        <button type="submit">Search</button>
      </form>
      <div>
        {recipes.map((recipe) => (
          <div key={recipe.id}>
            <h2>{recipe.title}</h2>
            <img src={recipe.image} alt={recipe.title} />
            <p>{recipe.summary}</p>
          </div>
        ))}
      </div>
    </div>
  );
};

export default RecipeSearch;

***************************************************
<div class="recipe-container">
  <div class="recipe-card">
    <img src="recipe-image.jpg" alt="Recipe Image">
    <h2 class="recipe-title">Recipe Title</h2>
    <p class="recipe-description">Recipe description goes here.</p>
    <a href="#" class="recipe-link">View Recipe</a>
  </div>
  <!-- Add more recipe cards here -->
</div>


.recipe-container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 20px;
}

.recipe-card {
  border: 1px solid #ddd;
  border-radius: 5px;
  overflow: hidden;
}

.recipe-card img {
  width: 100%;
  height: auto;
  object-fit: cover;
}

.recipe-title {
  margin: 10px;
  font-size: 1.5rem;
}

.recipe-description {
  margin: 10px;
  font-size: 1.2rem;
  color: #777;
}

.recipe-link {
  display: block;
  margin: 10px;
  padding: 10px 20px;
  background-color: #007bff;
  color: #fff;
  border-radius: 5px;
  text-align: center;
  text-decoration: none;
  font-size: 1.2rem;
}

.recipe-link:hover {
  background-color: #0062cc;
}
***********************************************************
recipe view : 

<div class="recipe-view">
  <div class="recipe-header">
    <img src="recipe-image.jpg" alt="Recipe Image">
    <h1 class="recipe-title">Recipe Title</h1>
    <div class="recipe-meta">
      <div class="recipe-time">
        <i class="far fa-clock"></i> 30 minutes
      </div>
      <div class="recipe-servings">
        <i class="fas fa-utensils"></i> 4 servings
      </div>
    </div>
  </div>
  <div class="recipe-ingredients">
    <h2 class="section-title">Ingredients</h2>
    <ul class="ingredients-list">
      <li>1 cup flour</li>
      <li>1/2 cup sugar</li>
      <li>1/2 cup butter</li>
      <li>1/4 cup milk</li>
      <!-- Add more ingredients here -->
    </ul>
  </div>
  <div class="recipe-instructions">
    <h2 class="section-title">Instructions</h2>
    <ol class="instructions-list">
      <li>Preheat the oven to 350°F.</li>
      <li>Mix the flour and sugar in a large bowl.</li>
      <li>Cut the butter into small pieces and add it to the bowl.</li>
      <li>Add the milk and mix everything together.</li>
      <!-- Add more instructions here -->
    </ol>
  </div>
</div>

.recipe-view {
  max-width: 800px;
  margin: 0 auto;
  padding: 40px;
}

.recipe-header {
  text-align: center;
}

.recipe-header img {
  max-width: 100%;
  height: auto;
  margin-bottom: 20px;
}

.recipe-title {
  margin-bottom: 10px;
  font-size: 2rem;
}

.recipe-meta {
  display: flex;
  justify-content: center;
}

.recipe-time, .recipe-servings {
  display: flex;
  align-items: center;
  margin-right: 20px;
  font-size: 1.2rem;
  color: #777;
}

.recipe-time i, .recipe-servings i {
  margin-right: 5px;
}

.section-title {
  font-size: 1.5rem;
  margin-bottom: 10px;
}

.ingredients-list, .instructions-list {
  list-style: none;
  padding-left: 0;
  margin: 0;
}

.instructions-list li::before {
  content: counter(instruction-counter) ". ";
  counter-increment: instruction-counter;
}

@media only screen and (max-width: 768px) {
  .recipe-view {
    padding: 20px;
  }

  .recipe-meta {
    flex-direction: column;
    align-items: flex-start;
    margin-top: 10px;
  }

  .recipe-time, .recipe-servings {
    margin-right: 0;
    margin-bottom: 10px;
  }
}
****************************************************************
saved recipe

import React, { useState } from 'react';

function ViewRecipe() {
  const [savedRecipes, setSavedRecipes] = useState([]);

  const handleSaveRecipe = () => {
    // code to save the current recipe to the savedRecipes state
    const currentRecipe = {
      title: "Recipe Title",
      ingredients: ["1 cup flour", "1/2 cup sugar", "1/2 cup butter", "1/4 cup milk"],
      instructions: ["Preheat the oven to 350°F.", "Mix the flour and sugar in a large bowl.", "Cut the butter into small pieces and add it to the bowl.", "Add the milk and mix everything together."],
      time: "30 minutes",
      servings: "4 servings",
      image: "recipe-image.jpg"
    };
    setSavedRecipes([...savedRecipes, currentRecipe]);
  }

  return (
    <div className="recipe-view">
      <div className="recipe-header">
        <img src="recipe-image.jpg" alt="Recipe Image" />
        <h1 className="recipe-title">Recipe Title</h1>
        <div className="recipe-meta">
          <div className="recipe-time">
            <i className="far fa-clock"></i> 30 minutes
          </div>
          <div className="recipe-servings">
            <i className="fas fa-utensils"></i> 4 servings
          </div>
        </div>
        <button className="save-recipe-btn" onClick={handleSaveRecipe}>Save Recipe</button>
      </div>
      <div className="recipe-ingredients">
        <h2 className="section-title">Ingredients</h2>
        <ul className="ingredients-list">
          <li>1 cup flour</li>
          <li>1/2 cup sugar</li>
          <li>1/2 cup butter</li>
          <li>1/4 cup milk</li>
          {/* Add more ingredients here */}
        </ul>
      </div>
      <div className="recipe-instructions">
        <h2 className="section-title">Instructions</h2>
        <ol className="instructions-list">
          <li>Preheat the oven to 350°F.</li>
          <li>Mix the flour and sugar in a large bowl.</li>
          <li>Cut the butter into small pieces and add it to the bowl.</li>
          <li>Add the milk and mix everything together.</li>
          {/* Add more instructions here */}
        </ol>
      </div>
    </div>
  );
}

function SavedRecipes({ recipes }) {
  return (
    <div className="saved-recipes">
      <h2 className="section-title">Saved Recipes</h2>
      <div className="recipe-list">
        {recipes.map((recipe, index) => (
          <div key={index} className="recipe-item">
            <img src={recipe.image} alt={recipe.title} />
            <h3 className="recipe-title">{recipe.title}</h3>
            <div className="recipe-meta">
              <div className="recipe-time">
                <i className="far fa-clock"></i> {recipe.time}
              </div>
              <div className="recipe-servings">
                <i className="fas fa-utensils"></i> {recipe.servings}
              </div>
            </div>
            <div className="recipe-ingredients">
              <h4 className="section-subtitle">Ingredients</h4>
              <ul className="ingredients-list">
                {recipe.ingredients.map((ingredient, index) =>
*********************************************************************
add component to plan meal to the user by selecting particular saved recipes or by searching recipe through sponacularAPI

import React, { useState } from 'react';

function MealPlanner({ savedRecipes }) {
  const [selectedRecipes, setSelectedRecipes] = useState([]);
  const [searchQuery, setSearchQuery] = useState("");
  const [searchResults, setSearchResults] = useState([]);

  const handleRecipeSelection = (recipe) => {
    // add or remove recipe from the selectedRecipes state
    if (selectedRecipes.includes(recipe)) {
      setSelectedRecipes(selectedRecipes.filter((r) => r !== recipe));
    } else {
      setSelectedRecipes([...selectedRecipes, recipe]);
    }
  }

  const handleSearchQueryChange = (event) => {
    // update the searchQuery state when the user types in the search box
    setSearchQuery(event.target.value);
  }

  const handleSearchSubmit = (event) => {
    // search for recipes when the user submits the search form
    event.preventDefault();
    fetch(`https://api.spoonacular.com/recipes/search?apiKey=YOUR_API_KEY&query=${searchQuery}&number=10`)
      .then((response) => response.json())
      .then((data) => setSearchResults(data.results))
      .catch((error) => console.log(error));
  }

  return (
    <div className="meal-planner">
      <h2 className="section-title">Meal Planner</h2>
      <form className="recipe-search-form" onSubmit={handleSearchSubmit}>
        <input type="text" value={searchQuery} onChange={handleSearchQueryChange} placeholder="Search for recipes..." />
        <button type="submit">Search</button>
      </form>
      <div className="recipe-list">
        {savedRecipes.map((recipe, index) => (
          <div key={index} className={`recipe-item ${selectedRecipes.includes(recipe) ? "selected" : ""}`} onClick={() => handleRecipeSelection(recipe)}>
            <img src={recipe.image} alt={recipe.title} />
            <h3 className="recipe-title">{recipe.title}</h3>
            <div className="recipe-meta">
              <div className="recipe-time">
                <i className="far fa-clock"></i> {recipe.time}
              </div>
              <div className="recipe-servings">
                <i className="fas fa-utensils"></i> {recipe.servings}
              </div>
            </div>
            <div className="recipe-ingredients">
              <h4 className="section-subtitle">Ingredients</h4>
              <ul className="ingredients-list">
                {recipe.ingredients.map((ingredient, index) => (
                  <li key={index}>{ingredient}</li>
                ))}
              </ul>
            </div>
          </div>
        ))}
        {searchResults.map((recipe, index) => (
          <div key={index} className={`recipe-item ${selectedRecipes.includes(recipe) ? "selected" : ""}`} onClick={() => handleRecipeSelection(recipe)}>
            <img src={`https://spoonacular.com/recipeImages/${recipe.image}`} alt={recipe.title} />
            <h3 className="recipe-title">{recipe.title}</h3>
            <div className="recipe-meta">
              <div className="recipe-time">
                <i className="far fa-clock"></i> {recipe.readyInMinutes} minutes
              </div>
              <div className="recipe-servings">
                <i className="fas fa-utensils"></i> {recipe.servings} servings
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );



*****************************************************************************************
import React, { useState } from 'react';

function MealPlanner({ savedRecipes, user }) {
  const [selectedRecipes, setSelectedRecipes] = useState([]);
  const [searchQuery, setSearchQuery] = useState("");
  const [searchResults, setSearchResults] = useState([]);
  const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];
  const [mealPlan, setMealPlan] = useState(daysOfWeek.map((day) => ({ day: day, recipe: null })));

  const handleRecipeSelection = (recipe) => {
    // add or remove recipe from the selectedRecipes state
    if (selectedRecipes.includes(recipe)) {
      setSelectedRecipes(selectedRecipes.filter((r) => r !== recipe));
    } else {
      setSelectedRecipes([...selectedRecipes, recipe]);
    }
  }

  const handleSearchQueryChange = (event) => {
    // update the searchQuery state when the user types in the search box
    setSearchQuery(event.target.value);
  }

  const handleSearchSubmit = (event) => {
    // search for recipes when the user submits the search form
    event.preventDefault();
    fetch(`https://api.spoonacular.com/recipes/search?apiKey=YOUR_API_KEY&query=${searchQuery}&number=10`)
      .then((response) => response.json())
      .then((data) => setSearchResults(data.results))
      .catch((error) => console.log(error));
  }

  const handleMealPlanUpdate = (dayIndex, recipe) => {
    // update the meal plan for a particular day with the selected recipe
    const updatedMealPlan = [...mealPlan];
    updatedMealPlan[dayIndex].recipe = recipe;
    setMealPlan(updatedMealPlan);
  }

  return (
    <div className="meal-planner">
      <h2 className="section-title">Meal Planner</h2>
      <form className="recipe-search-form" onSubmit={handleSearchSubmit}>
        <input type="text" value={searchQuery} onChange={handleSearchQueryChange} placeholder="Search for recipes..." />
        <button type="submit">Search</button>
      </form>
      <div className="recipe-list">
        <h3 className="section-subtitle">Saved Recipes</h3>
        {savedRecipes.map((recipe, index) => (
          <div key={index} className={`recipe-item ${selectedRecipes.includes(recipe) ? "selected" : ""}`} onClick={() => handleRecipeSelection(recipe)}>
            <img src={recipe.image} alt={recipe.title} />
            <h3 className="recipe-title">{recipe.title}</h3>
            <div className="recipe-meta">
              <div className="recipe-time">
                <i className="far fa-clock"></i> {recipe.time}
              </div>
              <div className="recipe-servings">
                <i className="fas fa-utensils"></i> {recipe.servings}
              </div>
            </div>
            <div className="recipe-ingredients">
              <h4 className="section-subtitle">Ingredients</h4>
              <ul className="ingredients-list">
                {recipe.ingredients.map((ingredient, index) => (
                  <li key={index}>{ingredient}</li>
                ))}
              </ul>
            </div>
            <button onClick={() => handleMealPlanUpdate(0, recipe)}>Add to Monday</button>
          </div>
        ))}
        <h3 className="section-subtitle">Search Results</h3>
        {searchResults.map((recipe,
